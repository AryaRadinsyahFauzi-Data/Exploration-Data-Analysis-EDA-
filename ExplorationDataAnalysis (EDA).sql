USE DataWarehouseAnalytics

SELECT * FROM gold.dim_customers;
SELECT * FROM gold.dim_products;
SELECT * FROM gold.fact_sales;

/*DATABASE EXPLORATION*/

-- Explore All Objects in the database
SELECT * FROM INFORMATION_SCHEMA.TABLES


--Explore All Columns in the Database
SELECT * FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'dim_customers'

/*DIMENSIONS EXPLORATION*/

--Explore All Countries Cur Customers Come From
SELECT DISTINCT country FROM gold.dim_customers

-- Explore All Ctegories "The Major Divisions"
SELECT DISTINCT category, subcategory, product_name FROM gold.dim_products
ORDER BY 1,2,3

/*DATE EXPLORATION*/

-- Find the date of the first and last order
SELECT 
	MIN(order_date) AS first_order, 
	MAX(order_date) AS last_order,
	DATEDIFF(MONTH, MIN(order_date), MAX(order_date)) AS order_range_months 
FROM gold.fact_sales

--find the youngest and the oldest customer
SELECT 
	DATEDIFF (YEAR, MIN(birthdate), GETDATE()) AS oldest_age_customers,
	DATEDIFF (YEAR, MAX(birthdate), GETDATE()) AS youngest_age_customers
FROM gold.dim_customers

/*MEASURES EXPLORATION*/

-- Find the Total Sales
SELECT SUM(sales_amount) FROM gold.fact_sales
-- Find how many items are sold
SELECT SUM(quantity) FROM gold.fact_sales
-- Find the average selling price
SELECT AVG(price) FROM gold.fact_sales
-- Find the total number of Orders
SELECT COUNT(DISTINCT order_number) FROM gold.fact_sales
-- Find the total number of products
SELECT COUNT(product_name) FROM gold.dim_products
-- Find the total number of customers
SELECT COUNT(DISTINCT customer_key) FROM gold.dim_customers
-- Find the total number of customers that has placed an order
SELECT COUNT(DISTINCT customer_key) FROM gold.fact_sales

SELECT 'Total Sales' AS measure_name, SUM(sales_amount) AS measure_value FROM gold.fact_sales
UNION ALL
SELECT 'Total Quantity', SUM(quantity) FROM gold.fact_sales
UNION ALL
SELECT 'Average Price', AVG(price) FROM gold.fact_sales
UNION ALL
SELECT 'Total Orders', COUNT(DISTINCT order_number) FROM gold.fact_sales
UNION ALL
SELECT 'Total NR. Products', COUNT(product_name) FROM gold.dim_products
UNION ALL
SELECT 'Total NR. Customers', COUNT(DISTINCT customer_key) FROM gold.fact_sales



/*MAGNITUDE*/

-- Find total customers by countries
SELECT 
	country,
	COUNT(customer_key) AS total_customer
FROM gold.dim_customers
GROUP BY country 
ORDER BY COUNT(customer_key) DESC;

-- Find total customers by gender
SELECT 
	gender,
	COUNT(customer_key) AS total_customer
FROM gold.dim_customers
GROUP BY gender
ORDER BY COUNT(customer_key) DESC;


-- Find total products by category
SELECT 
	category,
	COUNT(product_key) AS total_products
FROM gold.dim_products
GROUP BY category
ORDER BY COUNT(product_key) DESC;


-- What is the average costs in each category?
SELECT 
	category,
	AVG(cost) AS average_cost
FROM gold.dim_products
GROUP BY category
ORDER BY AVG(cost) DESC;


-- What is the total revenue generated for each category?
SELECT
	p.category,
	SUM(s.sales_amount) total_revenue
FROM gold.dim_products p
JOIN gold.fact_sales s
ON s.product_key = p.product_key
GROUP BY p.category
ORDER BY total_revenue DESC;


-- What is the total revenue generated for each country?
SELECT
	c.country,
	SUM(s.sales_amount) total_revenue
FROM gold.dim_customers c
LEFT JOIN gold.fact_sales s
ON c.customer_key = s.customer_key
GROUP BY c.country
ORDER BY SUM(s.sales_amount) DESC;


-- Find total revenue is generated by each customer
SELECT
	c.customer_key,
	c.first_name,
	c.last_name,
	SUM(s.sales_amount) AS total_revenue
FROM gold.fact_sales s 
LEFT JOIN gold.dim_customers c
ON c.customer_key = s.customer_key
GROUP BY
	c.customer_key,
	c.first_name,
	c.last_name
ORDER BY total_revenue DESC;
	


-- What is the distribution of sold items across countries?
SELECT
	c.country,
	SUM(s.quantity) AS total_sold_items
FROM gold.fact_sales s 
LEFT JOIN gold.dim_customers c
ON c.customer_key = s.customer_key
GROUP BY
	c.country
ORDER BY total_sold_items DESC;


/*RANKING ANALYSIS*/

-- Which 5 products generate the highest revenue?
SELECT TOP 5
	p.product_name,
	SUM(f.sales_amount) total_revenue
FROM gold.fact_sales f
LEFT JOIN gold.dim_products p
ON p.product_key = f.product_key
GROUP BY p.product_name
ORDER BY total_revenue DESC;


-- What are the 5 worst-performing products in term of sales
SELECT TOP 5
	p.product_name,
	SUM(f.sales_amount) total_revenue
FROM gold.fact_sales f
LEFT JOIN gold.dim_products p
ON p.product_key = f.product_key
GROUP BY p.product_name
ORDER BY total_revenue ASC;